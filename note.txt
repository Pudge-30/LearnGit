git --version       //查询git版本 
git config --global user.name ""    //设置全局用户名
git config --global user.email xxxx@163.com //设置全局用户邮箱
git config --global credential.helper store //保存用户信息
git config --global --list  //查询用户信息
git init            //将当前git目录初始化为git仓库
git init <repo_name>    //在当前目录下创建于一个新的git目录
git clone <repo_link>   //从github上clone一个git仓库

git status      //查询当前仓库状态
git add <file_name>     //将文件加入追踪
git add <*.后缀>        //将相同后缀的文件加入跟踪
git add .               //将当前文件夹内所有文件加入跟踪

git ls-files    //查询暂存区中文件内容

git commit -m <commit_info>     //提交更改，-m后为提交信息

git reflog      //查询所有操作的版本号（误操作后使用reset进行回退

git log         //查询提交记录
git log --oneline   //查询简洁提交信息
git reset --soft <version_id>    //保留工作区、暂存区内容，相当于撤销了commit操作。进行多次commit后，使用soft回退，然后再统一提交
git reset --hard <version_id>    //不保留工作区，也不保留暂存区，相当于回退到版本镜像，撤销之后的所有操作
git reset --mixed <version_id>   //保留工作区，但不保留暂存区，相当于撤销了add操作

------------工作区---------暂存区----------版本库------------
git diff            //工作区-暂存区
git diff HEAD       //工作区-版本库
git diff --cached   //暂存区-版本库